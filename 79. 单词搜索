class Solution {
    const int dx[4]={0,0,1,-1};
    const int dy[4]={-1,1,0,0};
    int m,n;
    bool vis[7][7];
public:
    bool exist(vector<vector<char>>& board, string word) {
        m=board.size(),n=board[0].size();
        for(int i=0;i<m;++i){
            for(int j=0;j<n;++j){
                if(board[i][j]==word[0]){
                    vis[i][j]=true;
                    if(dfs(board,i,j,word,1)) return true;
                    vis[i][j]=false;
                }
            }
        }
        return false;
    }

    bool dfs(vector<vector<char>>& board, int i,int j,string word,int pos){
        if(pos==word.size()) return true;

        for(int k=0;k<4;k++){
            int x=i+dx[k],y=j+dy[k];
            if(x>=0&&x<m&&y>=0&&y<n&&!vis[x][y]&&board[x][y]==word[pos]){
                vis[x][y]=true;
                if(dfs(board,x,y,word,pos+1)) return true;
                vis[x][y]=false;
            }
        }
        return false;
    }
};
