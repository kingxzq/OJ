class Solution {
    unordered_map<char,string> example{{'2',"abc"},{'3',"def"},{'4',"ghi"},{'5',"jkl"},{'6',"mno"},{'7',"pqrs"},{'8',"tuv"},{'9',"wxyz"}};
public:
    vector<string> letterCombinations(string digits) {
        vector<string> res;
        if(digits.empty()) return res;
        string str;
        combine(digits,res,str,0);
        return res;
    }

    void combine(const string& digits,vector<string>& res,string& str,int index){
        if(index==digits.size()) res.push_back(str);
        else{
            char digit =digits[index];
            const string& letters=example[digit];
            for(const char& letter:letters){
                str.push_back(letter);
                combine(digits,res,str,index+1);
                str.pop_back();
            }
        }
    }
};
