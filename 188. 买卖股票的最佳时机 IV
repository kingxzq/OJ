class Solution {
    const int INF = 0x3f3f3f3f;
public:
    int maxProfit(int k, vector<int>& prices) {
        int n=prices.size();
        k=min(k,n/2);
        vector<vector<int>> f(n,vector<int>(k+1,-INF));
        vector<vector<int>> g(n,vector<int>(k+1,-INF));

        f[0][0]=-prices[0],g[0][0]=0;
        for(int i=1;i<n;i++)
            for(int j=0;j<=k;++j){
                f[i][j]=max(f[i-1][j],g[i-1][j]-prices[i]);
                g[i][j]=g[i-1][j];
                if(j>0) g[i][j]=max(g[i][j],f[i-1][j-1]+prices[i]);
            }
        
        int ret = 0;
        for(int i=0;i<=k;++i)
            ret=max(ret,g[n-1][i]);
        
        return ret;
    }
};
