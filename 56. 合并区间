class Solution {
public:
    vector<vector<int>> merge(vector<vector<int>>& intervals) {
        if (intervals.size() == 0) {
            return {};
        }
        
        sort(intervals.begin(), intervals.end());
        
        vector<vector<int>> merged;
        merged.push_back(intervals[0]);
        
        for (int i = 1; i < intervals.size(); ++i) {
            int currStart = intervals[i][0];
            int currEnd = intervals[i][1];
            
            int mergedEnd = merged.back()[1];
            
            if (currStart <= mergedEnd) {
                merged.back()[1] = max(mergedEnd, currEnd);
            } else {
                merged.push_back(intervals[i]);
            }
        }
        
        return merged;
    }
};
