void _inorder(struct TreeNode*root,int* ret,int* returnSize)
{
    if(root==NULL)
        return;
    _inorder(root->left,ret,returnSize);
    ret[(*returnSize)++]=root->val;
    _inorder(root->right,ret,returnSize);
} 
int* inorderTraversal(struct TreeNode* root, int* returnSize){
    int* ret=malloc(sizeof(int)*200);
    *returnSize=0;
    _inorder(root,ret,returnSize);
    return ret;
}



//迭代写法
class Solution {
public:
    vector<int> inorderTraversal(TreeNode* root) {
        stack<TreeNode*> st;
        vector<int> v;
        TreeNode* cur = root;
        while (cur || !st.empty()) { 
            while (cur) {
                st.push(cur);
                cur = cur->left;
            }
            TreeNode* top = st.top();
            st.pop();
            v.push_back(top->val);

            cur = top->right;
        }
        return v;
    }
};
