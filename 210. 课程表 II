class Solution {
public:
    vector<int> findOrder(int numCourses, vector<vector<int>>& prerequisites) {
        unordered_map<int,vector<int>> edges;
        vector<int> in(numCourses,0);

        for(vector<int>& e:prerequisites){
            int a=e[0],b=e[1];
            edges[b].push_back(a);
            in[a]++;
        }

        queue<int> q;
        vector<int> ret;
        for(int i=0;i<numCourses;++i) 
            if(in[i]==0){
                q.push(i);
                ret.push_back(i);
            } 

        while(!q.empty()){
            int t=q.front();
            q.pop();
            for(int e:edges[t]){
                in[e]--;
                if(in[e]==0){ 
                    q.push(e);
                    ret.push_back(e);    
                }
            }
        }

        for(int i:in) if(i) return {};
        return ret;
    }
};
