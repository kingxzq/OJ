class Solution {
public:
    int uniquePaths(int m, int n) {
        vector<vector<int>> memo(m+1,vector<int>(n+1,0));
        return dfs(m,n,memo);
    }

    int dfs(int m,int n,vector<vector<int>>& memo){
        if(memo[m][n]!=0) return memo[m][n];

        if(m==0||n==0) return 0;
        if(m==1&&n==1){
            memo[m][n]=1;
            return 1;
        }

        memo[m][n]=dfs(m-1,n,memo)+dfs(m,n-1,memo);
        return memo[m][n];
    }
};


class Solution {
public:
    int uniquePaths(int m, int n) {
        vector<vector<int>> dp(m+1,vector<int>(n+1,0));
        dp[1][1]=1;
        for(int i=1;i<=m;i++){
            for(int j=1;j<=n;j++){
                if(i==1&&j==1) continue;
                dp[i][j]=dp[i-1][j]+dp[i][j-1];
            }
        }
        return dp[m][n];
    }
};
