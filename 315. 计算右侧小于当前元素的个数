class Solution {
    vector<int> ret;
    vector<int> index;
    int tmp[500000];
    int tindex[500000];
public:
    vector<int> countSmaller(vector<int>& nums) {
        int n=nums.size();
        ret.resize(n);
        index.resize(n);

        for(int i=0;i<n;i++)  index[i]=i;

        mergeSort(nums,0,n-1);
        return ret;
    }

    void mergeSort(vector<int>& nums,int left,int right){
        if(left>=right) return;

        int mid=(left+right)>>1;
        mergeSort(nums,left,mid);
        mergeSort(nums,mid+1,right);

        int cur1=left,cur2=mid+1,i=0;
        while(cur1<=mid&&cur2<=right){
            if(nums[cur1]<=nums[cur2]){
                tmp[i]=nums[cur2];
                tindex[i++]=index[cur2++];
            }
            else{
                ret[index[cur1]]+=right-cur2+1;
                tmp[i]=nums[cur1];
                tindex[i++]=index[cur1++];
            }
        }

        while(cur1<=mid){
            tmp[i]=nums[cur1];
            tindex[i++]=index[cur1++];
        }
        while(cur2<=right){
            tmp[i]=nums[cur2];
            tindex[i++]=index[cur2++];
        }
        for(int j=left;j<=right;j++){
            nums[j]=tmp[j-left];
            index[j]=tindex[j-left];
        }
    }
};
