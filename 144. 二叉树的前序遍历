void _preorder(struct TreeNode*root,int* ret,int* returnSize)
{
    if(root==NULL)
        return;
    ret[(*returnSize)++]=root->val;
    _preorder(root->left,ret,returnSize);
    _preorder(root->right,ret,returnSize);
} 
int* preorderTraversal(struct TreeNode* root, int* returnSize){
    int* ret=malloc(sizeof(int)*200);
    *returnSize=0;
    _preorder(root,ret,returnSize);
    return ret;
}



//迭代写法
class Solution {
public:
    vector<int> preorderTraversal(TreeNode* root) {
            stack<TreeNode*> st;
            vector<int> v;
            TreeNode* cur = root;
            while (cur || !st.empty()) { 
                while (cur) {
                    v.push_back(cur->val);
                    st.push(cur);
                    cur = cur->left;
                }
            TreeNode* top = st.top();
            st.pop();

            cur = top->right;
        }
        return v;
    }
};
