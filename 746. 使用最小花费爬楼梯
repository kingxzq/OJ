class Solution {
public:
    int minCostClimbingStairs(vector<int>& cost) {
        int n=cost.size();
        vector<int> dp(n+1,0);
        dp[0]=dp[1]=0;
        for(int i=2;i<=n;++i)
            dp[i]=min(cost[i-1]+dp[i-1],cost[i-2]+dp[i-2]);
        return dp[n];
    }
};


class Solution {
public:
    int minCostClimbingStairs(vector<int>& cost) {
        int n=cost.size();
        vector<int> dp(n,0);
        dp[n-1]=cost[n-1],dp[n-2]=cost[n-2];
        for(int i=n-3;i>=0;--i)
            dp[i]=min(cost[i]+dp[i+1],cost[i]+dp[i+2]);
        return min(dp[0],dp[1]);
    }
};
