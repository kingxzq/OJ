/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    void reorderList(ListNode* head) {
        if(!head||!head->next||!head->next->next) return;
        
        ListNode* slow=head,*fast=head;
        while(fast&&fast->next){
            slow=slow->next;
            fast=fast->next->next;
        }

        ListNode* newhead=new ListNode();
        ListNode* cur=slow->next;
        slow->next=nullptr;
        while(cur){
            ListNode* next=cur->next;
            cur->next=newhead->next;
            newhead->next=cur;
            cur=next;
        }

        ListNode* ret=new ListNode();
        ListNode* prev=ret;
        ListNode* cur1=head,*cur2=newhead->next;
        while(cur1){
            prev->next=cur1;
            cur1=cur1->next;
            prev=prev->next;

            if(cur2){
                prev->next=cur2;
                cur2=cur2->next;
                prev=prev->next;
            }
        }
        delete newhead;
        delete ret;
    }
};
